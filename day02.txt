git에서 저장하는 방식
git repository로 만들고(관리가능 하게) 임시저장 후 영구저장 

<git 순서>
git init 으로 깃 레포지토리 만들기
git config --global user.name ' 사용자이름 '
git config --global user.email ' 사용자이메일 '
git add .
git commit -m '메세지'

untracked 상태 
임시저장 : git add 파일이름
올라간 상태 확인 : git status
영구저장 : git commit
주석입력 : i - 주석텍스트 -  esc
나가기 : : wq

=> 한번에 하기 git commit -a / 파일이 tracked 상태일때만 가능
=> 한번에 하기 git commit -m '메세지'


  1) 임시저장 = stage에 올린다 
     임시저장 하는 방법 / stage에 올리는 방법 
     : git add 파일이름

     올라간 상태 확인 : git status
      Changes to be committed
 
     ex) day02폴더는 git repository 
      day02.txt 파일은 새롭게 만든 파일로 untracked/unstaged 된 상태 
      modified(수정된) 상태

      임시저장 : git add day02.txt -> staged / utracked 상태

    1-1) stage에 한번에 모든 파일 올리기
     : git add .

  2) 영구저장 = stage에 올린 후 에만 임시저장 가능 
     : git commit

    git commit(저장) 후 주석 남기기
    'i' 입력 INSERT 상태로 변경 -> 텍스트 입력 - esc
    : - wq

  2-1) commit 하면서 메세지를 동시에 작성하는 옵션
    : -m / git commit -m '메세지'
  
  2-2) commit 하면서 add 하는 옵션
    : -a / git commit -a
     단, 파일이 tracked 상태일때만 가능 / untracked 불가, 새롭게 만들어진 파일 불가

  3) 저장된 이력 지울 때
    : git restore 
     ex) git restore --staged day02.txt

  4) git log : 영구저장 로그 표기 / 최근표기 (HEAD -> master)
     commit 07f21a9895eeb1ad4bb4e3980a51a7271eeffb07 (HEAD -> master)
     Author: jahyeon123 <macarons_@naver.com>
     Date:   Sat Sep 30 10:53:19 2023 +0900

     두번째 커밋입니다.


branch 
  기능별로 혹은 파일별로 수정사항을 저장할 수 있도록 도와주는 장치
  기본적으로 브랜치를 만들면 master(main) 브랜치가 만들어진다

git repository에 존재하는 브랜치 목록 확인하기
  git branch 

branch 만들기
  git branch 브랜치이름

branch 병합하기
  git merge 브랜치 이름

  현재 위치한 공간에서 해당 브랜치를 내쪽으로 병합
  이 때 다른부분이 수정되어 있으면 이상없음
  같은 부분이면 직접 어느 코드를 설정할지 작성해준 후 
  직접 add, commit 해준다

branch 삭제
  git branch -d 브랜치이름

브랜치이름 바꾸기 
  git branch -m 브랜치이름


github
 연결 git remote add origin 주소 
      git remote add origin https://github.com/jahyeon123/dyay02.git

 업로드 git push origin 브랜치이름 (master/main...)
